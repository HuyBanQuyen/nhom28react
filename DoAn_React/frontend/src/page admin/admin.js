import React, { useState, useEffect } from "react";
import "../assets/css/admin.css";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import avt from "../assets/img/avt.png";
import Modal from "./Modal"; 

const Admin = () => {
  const [dashboardData, setDashboardData] = useState({
    totalPosts: 0,
    totalUsers: 0,
    totalContacts: 0,
    totalReports: 0,
  });

  const [posts, setPosts] = useState([]);
  const [users, setUsers] = useState([]);
  const [contacts, setContacts] = useState([]);
  const [reports, setReports] = useState([]);
  const [selectedUser, setSelectedUser] = useState(null); 
  const [isModalOpen, setModalOpen] = useState(false); 
  const navigate = useNavigate();

  
  useEffect(() => {
    const checkLoginStatus = async () => {
      try {
        const response = await axios.get("http://localhost:3001/admin/trangthai", { withCredentials: true });
        if (!response.data.loggedIn) {
          navigate("/admin-login");
        }
      } catch (error) {
        console.error("L·ªói khi ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p:", error);
        navigate("/admin-login");
      }
    };

    checkLoginStatus();
    fetchDashboardData();
  }, []);

  const fetchDashboardData = async () => {
    try {
      const postResponse = await axios.get("http://localhost:3001/admin/congthuc");
      const userResponse = await axios.get("http://localhost:3001/admin/nguoidung");
      const contactResponse = await axios.get("http://localhost:3001/admin/lienhe");
      const reportResponse = await axios.get("http://localhost:3001/admin/baocaobaiviet");

      setDashboardData({
        totalPosts: postResponse.data.total,
        totalUsers: userResponse.data.total,
        totalContacts: contactResponse.data.length,
        totalReports: reportResponse.data.length,
      });

      setPosts(postResponse.data.recipes);
      setUsers(userResponse.data.users);
      setContacts(contactResponse.data);
      setReports(reportResponse.data); 
    } catch (error) {
      console.error("L·ªói khi l·∫•y d·ªØ li·ªáu:", error);
    }
  };

  const handleDeletePost = async (id) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†i vi·∫øt n√†y kh√¥ng?")) {
      try {
        const response = await axios.delete(`http://localhost:3001/api/baiviet/${id}`);
        if (response.status === 200) {
          alert("X√≥a b√†i vi·∫øt th√†nh c√¥ng.");
          setPosts(posts.filter((post) => post.MaCongThuc !== id));
        }
      } catch (error) {
        console.error("L·ªói khi x√≥a b√†i vi·∫øt:", error);
        alert("L·ªói khi x√≥a b√†i vi·∫øt.");
      }
    }
  };

  const handleDeleteUser = async (id) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y kh√¥ng?")) {
      try {
        const response = await axios.delete(`http://localhost:3001/api/nguoidung/${id}`);
        if (response.status === 200) {
          alert("X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng.");
          setUsers(users.filter((user) => user.MaNguoiDung !== id));
        }
      } catch (error) {
        console.error("L·ªói khi x√≥a ng∆∞·ªùi d√πng:", error);
        alert("L·ªói khi x√≥a ng∆∞·ªùi d√πng.");
      }
    }
  };

  const handleLogout = async () => {
    try {
      await axios.post("http://localhost:3001/admin/dangxuat", {}, { withCredentials: true });
      navigate("/admin-login");
    } catch (error) {
      console.error("L·ªói khi ƒëƒÉng xu·∫•t:", error);
      alert("ƒêƒÉng xu·∫•t th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  };

  const handleViewUserDetail = async (id) => {
    try {
      const response = await axios.get(`http://localhost:3001/api/nguoidung/${id}`);
      setSelectedUser(response.data); 
      setModalOpen(true); 
    } catch (error) {
      console.error("L·ªói khi l·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng:", error);
      alert("L·ªói khi l·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng.");
    }
  };

  return (
    <div className="admin-dashboard">
      <aside className="sidebar-admin">
        <div className="logo-admin">
          <h1>Admin</h1>
        </div>
        <nav className="menu-admin">
          <a href="#dashboard" className="active">üè† Dashboard</a>
          <a href="#posts">üìù Qu·∫£n l√Ω b√†i vi·∫øt</a>
          <a href="#users">üë• Ng∆∞·ªùi d√πng</a>
          <a href="#contacts">üì© Li√™n h·ªá</a>
          <a href="#reports">üìä B√°o c√°o</a>
          <a href="#logout" onClick={handleLogout}>üîì ƒêƒÉng xu·∫•t</a>
        </nav>
      </aside>

      <main className="content-admin">
        <header className="header-admin">
          <h2>Qu·∫£n tr·ªã</h2>
          <div className="admin-info">
            <span>Ch√†o, Admin</span>
            <img src={avt} alt="avatar" />
          </div>
        </header>

        <section id="dashboard" className="dashboard">
          <h3>T·ªïng quan</h3>
          <div className="overview">
            <div className="card">
              <h4>B√†i vi·∫øt</h4>
              <p>{dashboardData.totalPosts}</p>
            </div>
            <div className="card">
              <h4>Ng∆∞·ªùi d√πng</h4>
              <p>{dashboardData.totalUsers}</p>
            </div>
            <div className="card">
              <h4>Li√™n h·ªá m·ªõi</h4>
              <p>{dashboardData.totalContacts}</p>
            </div>
            <div className="card">
              <h4>B√°o c√°o b√†i vi·∫øt</h4>
              <p>{dashboardData.totalReports}</p>
            </div>
          </div>
        </section>

        <section id="posts" className="management">
          <div className="section-header">
            <h3>Qu·∫£n l√Ω b√†i vi·∫øt</h3>
          </div>
          <table>
            <thead>
              <tr>
                <th>STT</th>
                <th>M√£ b√†i vi·∫øt</th>
                <th>Ti√™u ƒë·ªÅ</th>
                <th>T√°c gi·∫£</th>
                <th>Ng√†y ƒëƒÉng</th>
                <th>H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody>
              {posts.map((post, index) => (
                <tr key={post.MaCongThuc}>
                  <td>{index + 1}</td>
                  <td>{post.MaCongThuc}</td>
                  <td>{post.TenMonAn}</td>
                  <td>{post.MaNguoiDung}</td>
                  <td>{new Date(post.NgayDang).toLocaleDateString()}</td>
                  <td>
                    <button className="btn small edit" onClick={() => navigate(`/baiviet/${post.MaCongThuc}`)}>xem chi ti·∫øt</button>
                    <button className="btn small danger" onClick={() => handleDeletePost(post.MaCongThuc)}>X√≥a</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>

        <section id="users" className="management">
          <div className="section-header">
            <h3>Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h3>
          </div>
          <table>
            <thead>
              <tr>
                <th>STT</th>
                <th>M√£ ng∆∞·ªùi d√πng</th>
                <th>H·ªç t√™n</th>
                <th>Email</th>
                <th>Ng√†y ƒëƒÉng k√Ω</th>
                <th>H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody>
              {users.map((user, index) => (
                <tr key={user.MaNguoiDung}>
                  <td>{index + 1}</td>
                  <td>{user.MaNguoiDung}</td>
                  <td>{user.HoTen}</td>
                  <td>{user.Email}</td>
                  <td>{new Date(user.NgaySinh).toLocaleDateString()}</td>
                  <td>
                    <button className="btn small edit" onClick={() => handleViewUserDetail(user.MaNguoiDung)}>xem chi ti·∫øt</button>
                    <button className="btn small danger" onClick={() => handleDeleteUser(user.MaNguoiDung)}>X√≥a</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>

        <section id="contacts" className="management">
          <div className="section-header">
            <h3>Li√™n h·ªá t·ª´ ng∆∞·ªùi d√πng</h3>
          </div>
          <table>
            <thead>
              <tr>
                <th>#</th>
                <th>M√£ ng∆∞·ªùi d√πng</th>
                <th>T√™n</th>
                <th>Email</th>
                <th>Tin nh·∫Øn</th>
                <th>Ng√†y g·ª≠i</th>
              </tr>
            </thead>
            <tbody>
              {contacts.map((contact, index) => (
                <tr key={contact.MaLienHe}>
                  <td>{index + 1}</td>
                  <td>{contact.MaNguoiDung}</td>
                  <td>{contact.TenNguoiDung}</td>
                  <td>{contact.Email}</td>
                  <td>{contact.NoiDung}</td>
                  <td>{new Date(contact.NgayLienHe).toLocaleDateString()}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>

        <section id="reports" className="management">
          <div className="section-header">
            <h3>B√°o c√°o b√†i vi·∫øt</h3>
          </div>
          <table>
            <thead>
              <tr>
                <th>#</th>
                <th>B√†i vi·∫øt</th>
                <th>B√†i vi·∫øt b·ªã b√°o c√°o</th>
                <th>Ng∆∞·ªùi b√°o c√°o</th>
                <th>L√Ω do</th>
                <th>Ng√†y b√°o c√°o</th>
              </tr>
            </thead>
            <tbody>
              {reports.map((report, index) => (
                <tr key={report.MaBaoCao}>
                  <td>{index + 1}</td>
                  <td>{report.TenMonAn}</td>
                  <td>{report.MaCongThuc}</td>
                  <td>{report.TenNguoiDung}</td>
                  <td>{report.LyDo}</td>
                  <td>{new Date(report.NgayBaoCao).toLocaleDateString()}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>

        <section id="settings" className="management">
          <div className="section-header">
            <h3>C√†i ƒë·∫∑t</h3>
          </div>
         
        </section>
      </main>

      <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>
        {selectedUser && (
          <>
            <div className="user-detail-container">
              <h2>Chi Ti·∫øt Ng∆∞·ªùi D√πng</h2>
              <div className="user-info">
                <p><strong>H·ªç t√™n:</strong> {selectedUser.user.HoTen}</p>
                <p><strong>Email:</strong> {selectedUser.user.Email}</p>
                <p><strong>Ng√†y ƒëƒÉng k√Ω:</strong> {new Date(selectedUser.user.NgaySinh).toLocaleDateString()}</p>
                <p><strong>S·ªë b√†i vi·∫øt:</strong> {selectedUser.userPosts.length}</p>
                <p><strong>S·ªë b√¨nh lu·∫≠n:</strong> {selectedUser.userComments.length}</p>
                <p><strong>S·ªë b√°o c√°o:</strong> {selectedUser.userReports.length}</p>
                <p><strong>S·ªë li√™n h·ªá:</strong> {selectedUser.userContacts.length}</p>
              </div>

              <div className="user-section">
                <h3>B√†i Vi·∫øt</h3>
                <table>
                  <thead>
                    <tr>
                      <th>#</th>
                      <th>Ti√™u ƒë·ªÅ</th>
                      <th>T√°c gi·∫£</th>
                      <th>Ng√†y ƒëƒÉng</th>
                    </tr>
                  </thead>
                  <tbody>
                    {selectedUser.userPosts.map((post, index) => (
                      <tr key={index}>
                        <td>{index + 1}</td>
                        <td>{post.TenMonAn}</td>
                        <td>{post.TacGia}</td>
                        <td>{new Date(post.NgayDang).toLocaleDateString()}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>

              <div className="user-section">
                <h3>B√¨nh Lu·∫≠n</h3>
                <table>
                  <thead>
                    <tr>
                      <th>#</th>
                      <th>N·ªôi dung</th>
                      <th>Ng√†y b√¨nh lu·∫≠n</th>
                    </tr>
                  </thead>
                  <tbody>
                    {selectedUser.userComments.map((comment, index) => (
                      <tr key={index}>
                        <td>{index + 1}</td>
                        <td>{comment.NoiDung}</td>
                        <td>{new Date(comment.NgayBinhLuan).toLocaleDateString()}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>

              <div className="user-section">
                <h3>B√°o C√°o</h3>
                <table>
                  <thead>
                    <tr>
                      <th>#</th>
                      <th>M√£ b√†i vi·∫øt</th>
                      <th>B√†i vi·∫øt</th>
                      <th>Ng∆∞·ªùi b√°o c√°o</th>
                      <th>L√Ω do</th>
                      <th>Ng√†y b√°o c√°o</th>
                    </tr>
                  </thead>
                  <tbody>
                    {selectedUser.userReports.map((report, index) => (
                      <tr key={index}>
                        <td>{index + 1}</td>
                        <td>{report.MaCongThuc}</td>
                        <td>{report.TenMonAn}</td>
                        <td>{report.TenNguoiDung}</td>
                        <td>{report.LyDo}</td>
                        <td>{new Date(report.NgayBaoCao).toLocaleDateString()}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>

              <div className="user-section">
                <h3>Li√™n H·ªá</h3>
                <table>
                  <thead>
                    <tr>
                      <th>#</th>
                      <th>T√™n</th>
                      <th>Email</th>
                      <th>Tin nh·∫Øn</th>
                      <th>Ng√†y g·ª≠i</th>
                    </tr>
                  </thead>
                  <tbody>
                    {selectedUser.userContacts.map((contact, index) => (
                      <tr key={index}>
                        <td>{index + 1}</td>
                        <td>{contact.TenNguoiDung}</td>
                        <td>{contact.Email}</td>
                        <td>{contact.NoiDung}</td>
                        <td>{new Date(contact.NgayLienHe).toLocaleDateString()}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </>
        )}
      </Modal>
    </div>
  );
};

export default Admin;
